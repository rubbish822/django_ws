# Generated by Django 4.2 on 2023-04-10 15:01

import chat.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[chat.models.CustomUnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telephone', models.CharField(blank=True, max_length=11, unique=True, verbose_name='手机号')),
                ('vip_recommend_id', models.SmallIntegerField(blank=True, default=0, help_text='-1: 会员过期,0: 非会员,大于0: 具体的会员等级', verbose_name='vip等级')),
                ('user_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Normal'), (2, 'Sale')], default=1, verbose_name='用户类型')),
                ('gender', models.PositiveSmallIntegerField(blank=True, choices=[(1, '男'), (2, '女')], default=1, verbose_name='性别')),
                ('login_time', models.DateTimeField(blank=True, null=True, verbose_name='登录时间')),
                ('public_message_id', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='公共消息阅读id')),
                ('city_id', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='所在城市id')),
                ('head_pic', models.CharField(blank=True, default='', max_length=64, verbose_name='头像')),
                ('vip_start_time', models.DateTimeField(blank=True, null=True)),
                ('vip_end_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', chat.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BlackIp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('is_delete', models.BooleanField(blank=True, default=False)),
                ('ip', models.GenericIPAddressField(unique=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'BlackIp',
                'verbose_name_plural': 'BlackIp',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, verbose_name='content')),
                ('send_time', models.DateTimeField(auto_now_add=True, verbose_name='send time')),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Message',
            },
        ),
        migrations.CreateModel(
            name='MessageIp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, default=0, verbose_name='UserId')),
                ('content', models.TextField(blank=True, verbose_name='content')),
                ('send_time', models.DateTimeField(auto_now_add=True, verbose_name='send time')),
                ('is_show', models.BooleanField(blank=True, default=True, verbose_name='is_show')),
                ('is_notify', models.BooleanField(blank=True, default=False, verbose_name='is_notify')),
            ],
            options={
                'verbose_name': 'MessageIp',
                'verbose_name_plural': 'MessageIp',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('is_delete', models.BooleanField(blank=True, default=False)),
                ('name', models.CharField(blank=True, max_length=64, verbose_name='name')),
                ('label', models.CharField(blank=True, max_length=32, verbose_name='label uuid')),
                ('content', models.CharField(blank=True, max_length=128, verbose_name='content')),
            ],
            options={
                'verbose_name': 'Room',
                'verbose_name_plural': 'Room',
            },
        ),
        migrations.CreateModel(
            name='RoomIp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('is_delete', models.BooleanField(blank=True, default=False)),
                ('name', models.CharField(blank=True, max_length=64, verbose_name='name')),
                ('label', models.CharField(blank=True, max_length=32, verbose_name='label uuid')),
                ('content', models.CharField(blank=True, max_length=128, verbose_name='content')),
            ],
            options={
                'verbose_name': 'RoomIp',
                'verbose_name_plural': 'RoomIp',
            },
        ),
        migrations.CreateModel(
            name='RoomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('is_delete', models.BooleanField(blank=True, default=False)),
                ('is_owner', models.BooleanField(blank=True, default=False, verbose_name='Is Owner')),
            ],
            options={
                'verbose_name': 'RoomUser',
                'verbose_name_plural': 'RoomUser',
            },
        ),
        migrations.CreateModel(
            name='RoomUserIp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField()),
                ('room_ip_id', models.IntegerField(blank=True, default=0, verbose_name='roomIp_id')),
                ('is_online', models.BooleanField(blank=True, default=False, verbose_name='is_online')),
                ('connect_time', models.DateTimeField(auto_now_add=True, verbose_name='connect_time')),
                ('disconnect_time', models.DateTimeField(blank=True, null=True, verbose_name='disconnect_time')),
                ('last_connect_time', models.DateTimeField(auto_now_add=True, verbose_name='last_connect_time')),
                ('client_port', models.CharField(blank=True, max_length=16, verbose_name='port')),
                ('disconnect_type', models.PositiveSmallIntegerField(blank=True, choices=[(0, ''), (1, '用户断开'), (2, '系统重启'), (3, '连接超时'), (4, '违规被踢')], default=0)),
            ],
            options={
                'verbose_name': 'RoomUserIp',
                'verbose_name_plural': 'RoomUserIp',
            },
        ),
        migrations.CreateModel(
            name='UserIp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('is_delete', models.BooleanField(blank=True, default=False)),
                ('ip', models.GenericIPAddressField(unique=True)),
                ('username', models.CharField(blank=True, max_length=32, verbose_name='username')),
            ],
            options={
                'verbose_name': 'UserIp',
                'verbose_name_plural': 'UserIp',
            },
        ),
        migrations.AddIndex(
            model_name='userip',
            index=models.Index(fields=['ip'], name='chat_userip_ip_7b3863_idx'),
        ),
        migrations.AddIndex(
            model_name='userip',
            index=models.Index(fields=['username'], name='chat_userip_usernam_485985_idx'),
        ),
        migrations.AddIndex(
            model_name='roomuserip',
            index=models.Index(fields=['ip'], name='chat_roomus_ip_e842b8_idx'),
        ),
        migrations.AddIndex(
            model_name='roomuserip',
            index=models.Index(fields=['room_ip_id'], name='chat_roomus_room_ip_69ff3a_idx'),
        ),
        migrations.AddIndex(
            model_name='roomuserip',
            index=models.Index(fields=['is_online'], name='chat_roomus_is_onli_c01e87_idx'),
        ),
        migrations.AddIndex(
            model_name='roomuserip',
            index=models.Index(fields=['connect_time'], name='chat_roomus_connect_a6d744_idx'),
        ),
        migrations.AddIndex(
            model_name='roomuserip',
            index=models.Index(fields=['client_port'], name='chat_roomus_client__096954_idx'),
        ),
        migrations.AddIndex(
            model_name='roomuserip',
            index=models.Index(fields=['disconnect_type'], name='chat_roomus_disconn_100853_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='roomuserip',
            unique_together={('ip', 'client_port')},
        ),
        migrations.AddField(
            model_name='roomuser',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_users', to='chat.room'),
        ),
        migrations.AddField(
            model_name='roomuser',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_rooms', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='roomip',
            index=models.Index(fields=['label'], name='chat_roomip_label_f14e03_idx'),
        ),
        migrations.AddIndex(
            model_name='roomip',
            index=models.Index(fields=['create_time'], name='chat_roomip_create__98bf04_idx'),
        ),
        migrations.AddField(
            model_name='room',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
        migrations.AddField(
            model_name='messageip',
            name='room',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chat.roomip'),
        ),
        migrations.AddField(
            model_name='message',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chat.room'),
        ),
        migrations.AddField(
            model_name='message',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_messages', to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
        migrations.AddIndex(
            model_name='blackip',
            index=models.Index(fields=['ip'], name='chat_blacki_ip_4303e1_idx'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='roomuser',
            index=models.Index(fields=['is_owner'], name='chat_roomus_is_owne_6db3cc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='roomuser',
            unique_together={('user', 'room')},
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['label'], name='chat_room_label_36683f_idx'),
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['create_time'], name='chat_room_create__75dbde_idx'),
        ),
        migrations.AddIndex(
            model_name='messageip',
            index=models.Index(fields=['send_time'], name='chat_messag_send_ti_351757_idx'),
        ),
        migrations.AddIndex(
            model_name='messageip',
            index=models.Index(fields=['user_id'], name='chat_messag_user_id_94c2de_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['send_time'], name='chat_messag_send_ti_5ac884_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['telephone'], name='chat_user_telepho_dc961c_idx'),
        ),
    ]
